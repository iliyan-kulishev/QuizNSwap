@model HomeViewModel


@if (Model.Empty)
{
    <div class="wrapper--dashboard wrapper--empty">

        <div class="empty">

            <h1 class="empty__heading">
                You don&apos;t have any topics.
            </h1>
            <p>Create topics and organize them into folders.</p>
            <a asp-area="Dashboard" asp-controller="Topic" asp-action="Index" class="btn btn--green btn--add">CREATE TOPIC</a>
        </div>

        <div class="illustration--dashboard">
            <img src="/images/dashboard-illustration.svg">
        </div>
    </div>

}
else
{
    if (!Model.FoldersEmpty)
    {
        <div class="wrapper--dashboard">
            <div class="folders">
                <div class="folders__heading">
                    <h1 class="folders__heading--text">Folders</h1>
                    @**Create folder click handler with javascript*@
                    <a id="btn_createFolderToggle" class="btn btn--green btn--add">CREATE Folder</a>
                </div>
                <ul class="grid">
                    @foreach (HomeViewModel.Folder folder in Model.Folders)
                    {
                        <li>
                            <a asp-area="Dashboard" asp-controller="FolderDetails" asp-action="Index" asp-route-id="@folder.Id" class="folder-component">
                                <span class="icon-folder"></span>
                                <div class="folder-component__div">
                                    <p class="folder-component__number">@folder.TopicCount @((folder.TopicCount > 1 || folder.TopicCount == 0) ? "topics" : "topic")</p>
                                    <h6 class="folder-component__name">@folder.Name</h6>
                                </div>
                            </a>
                        </li>
                    }
                </ul>
            </div>
        </div>
    }
    if (!Model.TopicsEmpty)
    {

        <div class="wrapper--dashboard">
            <div class="folders">
                <div class="folders__heading">
                    <h1 class="folders__heading--text">Topics</h1>
                    <a asp-area="Dashboard" asp-controller="Topic" asp-action="Index" class="btn btn--green btn--add">CREATE Topic</a>
                </div>
                <ul class="grid">
                    @foreach (HomeViewModel.Topic topic in Model.Topics)
                    {
                        <li class="topic-component">
                            <div class="topic-component__div">
                                <p class="topic-component__number">@topic.QuestionCardCount @((topic.QuestionCardCount > 1 || topic.QuestionCardCount == 0) ? "questions" : "question")</p>
                                <h6 class="topic-component__name">@topic.Name</h6>
                            </div>
                        </li>
                    }
                </ul>
            </div>
        </div>


        <div class="createFolder">
            <div class="visible__container">
                <div class="title">
                <a id="closeFolder" class="close"></a>
                <h1>Create new folder</h1>
                </div>
            <p id="error_txt"></p>
           
            <!-- <input id="folderName_input" class="" type="text" /> -->
            <textarea data-autoresize class="question__textarea" id="folderName_input" maxlength="255"></textarea>
             <label class="">Folder Name</label>
            <!-- <p class="message-folder">Folder name must be unique</p> -->

            <button id="btn_createFolder" class="btn btn--blue">Create folder</button>
            </div>
        </div>
    }
}

<script>

    const errorTxtElem = document.getElementById("error_txt");

    document.getElementById("btn_createFolderToggle").addEventListener("click", () => {
        const overlay = document.getElementsByClassName("createFolder");
        overlay[0].classList.toggle("visible");
    })

    document.getElementById("closeFolder").addEventListener("click",() =>{
       const close = document.getElementsByClassName("createFolder");
        close[0].classList.remove("visible");
    })

    document.getElementById("btn_createFolder").addEventListener("click", () => {
        const folderName_input = document.getElementById('folderName_input');

        const uri = 'api/folder';

        const viewModelJS = folderName_input.value;

        fetch(uri, {
            method: 'POST',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(
                {
                    name : viewModelJS
                })
        })
            //.then(response => response.json())
            .then((response) => {
                //success
                console.log(response);
                if (response.status == 200)
                {
                    location.reload();
                }
                //bad request, empty input
                if (response.status == 400)
                {
                    errorTxtElem.innerText = "Folder name is required.";
                }
                //occupied folder name
                if (response.status == 500)
                {
                    errorTxtElem.innerText = "There already exists a folder with that name";
                }
            })
            .catch(error => console.error('Unable to add folder.', error));

    });

</script>


